Todo List Project Potential Outline:

General Idea:
	The idea of this app is for users to keep track of tasks they complete throughout the day. Each task has an associated point value which, when completed, adds to the user's total points and level. (example: doing laundry would give the user 10 points and getting 50 points would raise the user from level 1 to level 2). We also want to implement friend functionality where the user can "friend" people and be able to view their daily tasks and rank

Pages (Front-End):
 - Login - login to your account
	<form login>
		<input email>
		<input password>
	</form>
	on submit, redirect to correct page:
 - Register - register for account
 	<form register>
 		<input email>
 		<input name>
 		<input password>
 		<input confirm password>
 		<input phone>
 		<input image url?>
 		possibly more...
 	</form>
	on submit, redirect to login:
 - Create New Task - Form for submitting a general task template(coding, exercising, working, etc.). These can then be instantiated on the user's daily schedule
	<form create task>
		<input task name>
		<input task description>
		<input points> how many points the user will receive upon completing this task
	</form>
 - Daily Schedule - a list of tasks for the current day. To add a task, user can pick from pre-made tasks from the "Create New Task"... also have the ability to change day, mark completed tasks, etc.
	<input change which day is currently being displayed>
	<List>
		<task 1> can mark as complete, remove, etc.
		<task 2>
		<task ...>
	<List>
	<form add task>
		<select task>
		<input duration>
	</form>
Friends List - View a list of all friends, have the option to view their daily schedule
	<input search for friend by email or name>
	<List>
		<Friend 1>  Link to view friend's daily schedule, also display level
		<Friend 2>
		<Friend ...>
	</List>
 - add Friend Page - Send a friend request to someone based on email, also able to accept/decline friend requests
	<form send request>
		<input friend's email>
	</form>
	<List>
		<incoming friend request> option to accept/decline
		<incoming friend request> option to accept/decline
		<incoming friend request> option to accept/decline
	</List>
Profile Page - view user info and also view points/level (gained from completing tasks), Could be a sidebar that is instantiated on every page
	<Name>		 option to change	
	<Profile Image> option to change
	<Email>     
	<Phone>      option to change
	<Points>
	<Level>


Database tables:
	// a user of the app
	User {
		id: integer, PRIMARY KEY, AUTO_INCREMENT
		email: char(50) NOT NULL UNIQUE
		name: char(50),
		password: char(50),
		phone: integer,
		points: integer,
		level: integer,
		profile_image: char(50)
	}
	// a task object. This is a general task that can be performed many times
	Task {
		id: integer PRIMARY KEY, AUTO_INCREMENT
		name: char(50),
		description: char(50),
		points: integer
	}
	// a mapping that indicates a user performing a certain task 
	on a certain day:
	TaskMapping {
		userId: integer foreign key to User(id),
		taskId: integer foreign key to Task(id),
		date: Date,
		status ENUM('pending', 'completed')
	}
	// a friend request from one user to another:
	FriendRequest {
		fromId: userId: integer foreign key to User(id),
		toId: userId: integer foreign key to User(id),
		status ENUM('pending', 'accepted', 'rejected')
	}
	// indicating whether a user is friends with another friend
	Friends {
		userId: integer foreign key to User(id),
		friendId: integer foreign key to User(id)
	}

Spring:
TBD

Reach Goals:
	search friends by name/email
	modal for submitting tasks
	Tree grows when tasks are completed, shrinks when tasks are not completed
	Time completed for task